{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","../lib/KmsDetectFaces.js","../lib/KmsSendData.js","../lib/KmsShowData.js","../lib/KmsShowFaces.js","../lib/browser.js"],"names":["KmsDetectFaces","super_","call","this","checkKmsDetectFaces","key","value","ChecktypeError","inherits","require","kurentoClient","disguise","checkType","Filter","register","abstracts","constructorParams","mediaPipeline","type","required","events","module","exports","check","KmsSendData","checkKmsSendData","MediaElement","KmsShowData","checkKmsShowData","KmsShowFaces","checkKmsShowFaces"],"mappings":"AAAA;ACuCA,QAASA,kBACPA,eAAeC,OAAOC,KAAKC,MAkC7B,QAASC,qBAAoBC,EAAKC,GAEhC,KAAKA,YAAiBN,iBACpB,KAAMO,gBAAeF,EAAKL,eAAgBM,GA3D9C,GAAIE,UAAWC,QAAQ,YAEnBC,cAAgBD,QAAQ,kBAExBE,SAAWD,cAAcC,SAEzBJ,eAAiBG,cAAcE,UAAUL,eAEzCM,OAASH,cAAcI,SAASC,UAAUF,MAgB9CL,UAASR,eAAgBa,QASzBb,eAAegB,mBACbC,eACEC,KAAM,wBACNC,UAAU,IASdnB,eAAeoB,OAASP,OAAOO,OAkB/BC,OAAOC,QAAUtB,eAEjBA,eAAeuB,MAAQnB;;AC5CvB,QAASoB,eACPA,YAAYvB,OAAOC,KAAKC,MAkC1B,QAASsB,kBAAiBpB,EAAKC,GAE7B,KAAKA,YAAiBkB,cACpB,KAAMjB,gBAAeF,EAAKmB,YAAalB,GA3D3C,GAAIE,UAAWC,QAAQ,YAEnBC,cAAgBD,QAAQ,kBAExBE,SAAWD,cAAcC,SAEzBJ,eAAiBG,cAAcE,UAAUL,eAEzCmB,aAAehB,cAAcI,SAASC,UAAUW,YAgBpDlB,UAASgB,YAAaE,cAStBF,YAAYR,mBACVC,eACEC,KAAM,wBACNC,UAAU,IASdK,YAAYJ,OAASM,aAAaN,OAkBlCC,OAAOC,QAAUE,YAEjBA,YAAYD,MAAQE;;AC5CpB,QAASE,eACPA,YAAY1B,OAAOC,KAAKC,MAkC1B,QAASyB,kBAAiBvB,EAAKC,GAE7B,KAAKA,YAAiBqB,cACpB,KAAMpB,gBAAeF,EAAKsB,YAAarB,GA3D3C,GAAIE,UAAWC,QAAQ,YAEnBC,cAAgBD,QAAQ,kBAExBE,SAAWD,cAAcC,SAEzBJ,eAAiBG,cAAcE,UAAUL,eAEzCmB,aAAehB,cAAcI,SAASC,UAAUW,YAgBpDlB,UAASmB,YAAaD,cAStBC,YAAYX,mBACVC,eACEC,KAAM,wBACNC,UAAU,IASdQ,YAAYP,OAASM,aAAaN,OAkBlCC,OAAOC,QAAUK,YAEjBA,YAAYJ,MAAQK;;AC5CpB,QAASC,gBACPA,aAAa5B,OAAOC,KAAKC,MAkC3B,QAAS2B,mBAAkBzB,EAAKC,GAE9B,KAAKA,YAAiBuB,eACpB,KAAMtB,gBAAeF,EAAKwB,aAAcvB,GA3D5C,GAAIE,UAAWC,QAAQ,YAEnBC,cAAgBD,QAAQ,kBAExBE,SAAWD,cAAcC,SAEzBJ,eAAiBG,cAAcE,UAAUL,eAEzCM,OAASH,cAAcI,SAASC,UAAUF,MAgB9CL,UAASqB,aAAchB,QASvBgB,aAAab,mBACXC,eACEC,KAAM,wBACNC,UAAU,IASdU,aAAaT,OAASP,OAAOO,OAkB7BC,OAAOC,QAAUO,aAEjBA,aAAaN,MAAQO;;AC/ErBrB,QAAQ","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2015 Kurento (https://kurento.openvidu.io/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar inherits = require('inherits');\n\nvar kurentoClient = require('kurento-client');\n\nvar disguise = kurentoClient.disguise;\n\nvar ChecktypeError = kurentoClient.checkType.ChecktypeError;\n\nvar Filter = kurentoClient.register.abstracts.Filter;\n\n\n/**\n * Create an element\n *\n * @classdesc\n *  KmsDetectFaces interface. Documentation about the module\n *\n * @extends module:core/abstracts.Filter\n *\n * @constructor module:datachannelexample.KmsDetectFaces\n */\nfunction KmsDetectFaces(){\n  KmsDetectFaces.super_.call(this);\n};\ninherits(KmsDetectFaces, Filter);\n\n\n/**\n * @alias module:datachannelexample.KmsDetectFaces.constructorParams\n *\n * @property {module:core.MediaPipeline} mediaPipeline\n *  the parent {@link MediaPipeline}\n */\nKmsDetectFaces.constructorParams = {\n  mediaPipeline: {\n    type: 'kurento.MediaPipeline',\n    required: true\n  }\n};\n\n/**\n * @alias module:datachannelexample.KmsDetectFaces.events\n *\n * @extends module:core/abstracts.Filter.events\n */\nKmsDetectFaces.events = Filter.events;\n\n\n/**\n * Checker for {@link module:datachannelexample.KmsDetectFaces}\n *\n * @memberof module:datachannelexample\n *\n * @param {external:String} key\n * @param {module:datachannelexample.KmsDetectFaces} value\n */\nfunction checkKmsDetectFaces(key, value)\n{\n  if(!(value instanceof KmsDetectFaces))\n    throw ChecktypeError(key, KmsDetectFaces, value);\n};\n\n\nmodule.exports = KmsDetectFaces;\n\nKmsDetectFaces.check = checkKmsDetectFaces;\n","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2015 Kurento (https://kurento.openvidu.io/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar inherits = require('inherits');\n\nvar kurentoClient = require('kurento-client');\n\nvar disguise = kurentoClient.disguise;\n\nvar ChecktypeError = kurentoClient.checkType.ChecktypeError;\n\nvar MediaElement = kurentoClient.register.abstracts.MediaElement;\n\n\n/**\n * Create an element\n *\n * @classdesc\n *  KmsSendData interface. Documentation about the module\n *\n * @extends module:core/abstracts.MediaElement\n *\n * @constructor module:datachannelexample.KmsSendData\n */\nfunction KmsSendData(){\n  KmsSendData.super_.call(this);\n};\ninherits(KmsSendData, MediaElement);\n\n\n/**\n * @alias module:datachannelexample.KmsSendData.constructorParams\n *\n * @property {module:core.MediaPipeline} mediaPipeline\n *  the parent {@link MediaPipeline}\n */\nKmsSendData.constructorParams = {\n  mediaPipeline: {\n    type: 'kurento.MediaPipeline',\n    required: true\n  }\n};\n\n/**\n * @alias module:datachannelexample.KmsSendData.events\n *\n * @extends module:core/abstracts.MediaElement.events\n */\nKmsSendData.events = MediaElement.events;\n\n\n/**\n * Checker for {@link module:datachannelexample.KmsSendData}\n *\n * @memberof module:datachannelexample\n *\n * @param {external:String} key\n * @param {module:datachannelexample.KmsSendData} value\n */\nfunction checkKmsSendData(key, value)\n{\n  if(!(value instanceof KmsSendData))\n    throw ChecktypeError(key, KmsSendData, value);\n};\n\n\nmodule.exports = KmsSendData;\n\nKmsSendData.check = checkKmsSendData;\n","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2015 Kurento (https://kurento.openvidu.io/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar inherits = require('inherits');\n\nvar kurentoClient = require('kurento-client');\n\nvar disguise = kurentoClient.disguise;\n\nvar ChecktypeError = kurentoClient.checkType.ChecktypeError;\n\nvar MediaElement = kurentoClient.register.abstracts.MediaElement;\n\n\n/**\n * Create an element\n *\n * @classdesc\n *  KmsShowData interface. Documentation about the module\n *\n * @extends module:core/abstracts.MediaElement\n *\n * @constructor module:datachannelexample.KmsShowData\n */\nfunction KmsShowData(){\n  KmsShowData.super_.call(this);\n};\ninherits(KmsShowData, MediaElement);\n\n\n/**\n * @alias module:datachannelexample.KmsShowData.constructorParams\n *\n * @property {module:core.MediaPipeline} mediaPipeline\n *  the parent {@link MediaPipeline}\n */\nKmsShowData.constructorParams = {\n  mediaPipeline: {\n    type: 'kurento.MediaPipeline',\n    required: true\n  }\n};\n\n/**\n * @alias module:datachannelexample.KmsShowData.events\n *\n * @extends module:core/abstracts.MediaElement.events\n */\nKmsShowData.events = MediaElement.events;\n\n\n/**\n * Checker for {@link module:datachannelexample.KmsShowData}\n *\n * @memberof module:datachannelexample\n *\n * @param {external:String} key\n * @param {module:datachannelexample.KmsShowData} value\n */\nfunction checkKmsShowData(key, value)\n{\n  if(!(value instanceof KmsShowData))\n    throw ChecktypeError(key, KmsShowData, value);\n};\n\n\nmodule.exports = KmsShowData;\n\nKmsShowData.check = checkKmsShowData;\n","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2015 Kurento (https://kurento.openvidu.io/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar inherits = require('inherits');\n\nvar kurentoClient = require('kurento-client');\n\nvar disguise = kurentoClient.disguise;\n\nvar ChecktypeError = kurentoClient.checkType.ChecktypeError;\n\nvar Filter = kurentoClient.register.abstracts.Filter;\n\n\n/**\n * Create an element\n *\n * @classdesc\n *  KmsShowFaces interface. Documentation about the module\n *\n * @extends module:core/abstracts.Filter\n *\n * @constructor module:datachannelexample.KmsShowFaces\n */\nfunction KmsShowFaces(){\n  KmsShowFaces.super_.call(this);\n};\ninherits(KmsShowFaces, Filter);\n\n\n/**\n * @alias module:datachannelexample.KmsShowFaces.constructorParams\n *\n * @property {module:core.MediaPipeline} mediaPipeline\n *  the parent {@link MediaPipeline}\n */\nKmsShowFaces.constructorParams = {\n  mediaPipeline: {\n    type: 'kurento.MediaPipeline',\n    required: true\n  }\n};\n\n/**\n * @alias module:datachannelexample.KmsShowFaces.events\n *\n * @extends module:core/abstracts.Filter.events\n */\nKmsShowFaces.events = Filter.events;\n\n\n/**\n * Checker for {@link module:datachannelexample.KmsShowFaces}\n *\n * @memberof module:datachannelexample\n *\n * @param {external:String} key\n * @param {module:datachannelexample.KmsShowFaces} value\n */\nfunction checkKmsShowFaces(key, value)\n{\n  if(!(value instanceof KmsShowFaces))\n    throw ChecktypeError(key, KmsShowFaces, value);\n};\n\n\nmodule.exports = KmsShowFaces;\n\nKmsShowFaces.check = checkKmsShowFaces;\n","/**\n * Loader for the kurento-module-datachannelexample package on the browser\n */\n\nrequire('.');\n"]}